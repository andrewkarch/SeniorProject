//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Anderson_Widget_Company.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetLogin", ReplyAction="http://tempuri.org/IService1/GetLoginResponse")]
        System.IAsyncResult BeginGetLogin(string value, System.AsyncCallback callback, object asyncState);
        
        int EndGetLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetOrder", ReplyAction="http://tempuri.org/IService1/GetOrderResponse")]
        System.IAsyncResult BeginGetOrder(System.AsyncCallback callback, object asyncState);
        
        string EndGetOrder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/confirmPick", ReplyAction="http://tempuri.org/IService1/confirmPickResponse")]
        System.IAsyncResult BeginconfirmPick(int orderNum, System.AsyncCallback callback, object asyncState);
        
        void EndconfirmPick(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/updateQuantity", ReplyAction="http://tempuri.org/IService1/updateQuantityResponse")]
        System.IAsyncResult BeginupdateQuantity(int pid, string row, string box, int quantity, System.AsyncCallback callback, object asyncState);
        
        void EndupdateQuantity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(Anderson_Widget_Company.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        Anderson_Widget_Company.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Anderson_Widget_Company.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Anderson_Widget_Company.ServiceReference1.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Anderson_Widget_Company.ServiceReference1.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Anderson_Widget_Company.ServiceReference1.IService1>, Anderson_Widget_Company.ServiceReference1.IService1 {
        
        private BeginOperationDelegate onBeginGetLoginDelegate;
        
        private EndOperationDelegate onEndGetLoginDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderDelegate;
        
        private EndOperationDelegate onEndGetOrderDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderCompletedDelegate;
        
        private BeginOperationDelegate onBeginconfirmPickDelegate;
        
        private EndOperationDelegate onEndconfirmPickDelegate;
        
        private System.Threading.SendOrPostCallback onconfirmPickCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateQuantityDelegate;
        
        private EndOperationDelegate onEndupdateQuantityDelegate;
        
        private System.Threading.SendOrPostCallback onupdateQuantityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetLoginCompletedEventArgs> GetLoginCompleted;
        
        public event System.EventHandler<GetOrderCompletedEventArgs> GetOrderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> confirmPickCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> updateQuantityCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Anderson_Widget_Company.ServiceReference1.IService1.BeginGetLogin(string value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogin(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Anderson_Widget_Company.ServiceReference1.IService1.EndGetLogin(System.IAsyncResult result) {
            return base.Channel.EndGetLogin(result);
        }
        
        private System.IAsyncResult OnBeginGetLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string value = ((string)(inValues[0]));
            return ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).BeginGetLogin(value, callback, asyncState);
        }
        
        private object[] OnEndGetLogin(System.IAsyncResult result) {
            int retVal = ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).EndGetLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginCompleted(object state) {
            if ((this.GetLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginCompleted(this, new GetLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginAsync(string value) {
            this.GetLoginAsync(value, null);
        }
        
        public void GetLoginAsync(string value, object userState) {
            if ((this.onBeginGetLoginDelegate == null)) {
                this.onBeginGetLoginDelegate = new BeginOperationDelegate(this.OnBeginGetLogin);
            }
            if ((this.onEndGetLoginDelegate == null)) {
                this.onEndGetLoginDelegate = new EndOperationDelegate(this.OnEndGetLogin);
            }
            if ((this.onGetLoginCompletedDelegate == null)) {
                this.onGetLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginDelegate, new object[] {
                        value}, this.onEndGetLoginDelegate, this.onGetLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Anderson_Widget_Company.ServiceReference1.IService1.BeginGetOrder(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrder(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Anderson_Widget_Company.ServiceReference1.IService1.EndGetOrder(System.IAsyncResult result) {
            return base.Channel.EndGetOrder(result);
        }
        
        private System.IAsyncResult OnBeginGetOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).BeginGetOrder(callback, asyncState);
        }
        
        private object[] OnEndGetOrder(System.IAsyncResult result) {
            string retVal = ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).EndGetOrder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderCompleted(object state) {
            if ((this.GetOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderAsync() {
            this.GetOrderAsync(null);
        }
        
        public void GetOrderAsync(object userState) {
            if ((this.onBeginGetOrderDelegate == null)) {
                this.onBeginGetOrderDelegate = new BeginOperationDelegate(this.OnBeginGetOrder);
            }
            if ((this.onEndGetOrderDelegate == null)) {
                this.onEndGetOrderDelegate = new EndOperationDelegate(this.OnEndGetOrder);
            }
            if ((this.onGetOrderCompletedDelegate == null)) {
                this.onGetOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderDelegate, null, this.onEndGetOrderDelegate, this.onGetOrderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Anderson_Widget_Company.ServiceReference1.IService1.BeginconfirmPick(int orderNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginconfirmPick(orderNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Anderson_Widget_Company.ServiceReference1.IService1.EndconfirmPick(System.IAsyncResult result) {
            base.Channel.EndconfirmPick(result);
        }
        
        private System.IAsyncResult OnBeginconfirmPick(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int orderNum = ((int)(inValues[0]));
            return ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).BeginconfirmPick(orderNum, callback, asyncState);
        }
        
        private object[] OnEndconfirmPick(System.IAsyncResult result) {
            ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).EndconfirmPick(result);
            return null;
        }
        
        private void OnconfirmPickCompleted(object state) {
            if ((this.confirmPickCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.confirmPickCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void confirmPickAsync(int orderNum) {
            this.confirmPickAsync(orderNum, null);
        }
        
        public void confirmPickAsync(int orderNum, object userState) {
            if ((this.onBeginconfirmPickDelegate == null)) {
                this.onBeginconfirmPickDelegate = new BeginOperationDelegate(this.OnBeginconfirmPick);
            }
            if ((this.onEndconfirmPickDelegate == null)) {
                this.onEndconfirmPickDelegate = new EndOperationDelegate(this.OnEndconfirmPick);
            }
            if ((this.onconfirmPickCompletedDelegate == null)) {
                this.onconfirmPickCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnconfirmPickCompleted);
            }
            base.InvokeAsync(this.onBeginconfirmPickDelegate, new object[] {
                        orderNum}, this.onEndconfirmPickDelegate, this.onconfirmPickCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Anderson_Widget_Company.ServiceReference1.IService1.BeginupdateQuantity(int pid, string row, string box, int quantity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateQuantity(pid, row, box, quantity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Anderson_Widget_Company.ServiceReference1.IService1.EndupdateQuantity(System.IAsyncResult result) {
            base.Channel.EndupdateQuantity(result);
        }
        
        private System.IAsyncResult OnBeginupdateQuantity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pid = ((int)(inValues[0]));
            string row = ((string)(inValues[1]));
            string box = ((string)(inValues[2]));
            int quantity = ((int)(inValues[3]));
            return ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).BeginupdateQuantity(pid, row, box, quantity, callback, asyncState);
        }
        
        private object[] OnEndupdateQuantity(System.IAsyncResult result) {
            ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).EndupdateQuantity(result);
            return null;
        }
        
        private void OnupdateQuantityCompleted(object state) {
            if ((this.updateQuantityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateQuantityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateQuantityAsync(int pid, string row, string box, int quantity) {
            this.updateQuantityAsync(pid, row, box, quantity, null);
        }
        
        public void updateQuantityAsync(int pid, string row, string box, int quantity, object userState) {
            if ((this.onBeginupdateQuantityDelegate == null)) {
                this.onBeginupdateQuantityDelegate = new BeginOperationDelegate(this.OnBeginupdateQuantity);
            }
            if ((this.onEndupdateQuantityDelegate == null)) {
                this.onEndupdateQuantityDelegate = new EndOperationDelegate(this.OnEndupdateQuantity);
            }
            if ((this.onupdateQuantityCompletedDelegate == null)) {
                this.onupdateQuantityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateQuantityCompleted);
            }
            base.InvokeAsync(this.onBeginupdateQuantityDelegate, new object[] {
                        pid,
                        row,
                        box,
                        quantity}, this.onEndupdateQuantityDelegate, this.onupdateQuantityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Anderson_Widget_Company.ServiceReference1.IService1.BeginGetDataUsingDataContract(Anderson_Widget_Company.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Anderson_Widget_Company.ServiceReference1.CompositeType Anderson_Widget_Company.ServiceReference1.IService1.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Anderson_Widget_Company.ServiceReference1.CompositeType composite = ((Anderson_Widget_Company.ServiceReference1.CompositeType)(inValues[0]));
            return ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            Anderson_Widget_Company.ServiceReference1.CompositeType retVal = ((Anderson_Widget_Company.ServiceReference1.IService1)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(Anderson_Widget_Company.ServiceReference1.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(Anderson_Widget_Company.ServiceReference1.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Anderson_Widget_Company.ServiceReference1.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<Anderson_Widget_Company.ServiceReference1.IService1>, Anderson_Widget_Company.ServiceReference1.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<Anderson_Widget_Company.ServiceReference1.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLogin(string value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetLogin", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrder(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOrder", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetOrder(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetOrder", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginconfirmPick(int orderNum, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = orderNum;
                System.IAsyncResult _result = base.BeginInvoke("confirmPick", _args, callback, asyncState);
                return _result;
            }
            
            public void EndconfirmPick(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("confirmPick", _args, result);
            }
            
            public System.IAsyncResult BeginupdateQuantity(int pid, string row, string box, int quantity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = pid;
                _args[1] = row;
                _args[2] = box;
                _args[3] = quantity;
                System.IAsyncResult _result = base.BeginInvoke("updateQuantity", _args, callback, asyncState);
                return _result;
            }
            
            public void EndupdateQuantity(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("updateQuantity", _args, result);
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(Anderson_Widget_Company.ServiceReference1.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public Anderson_Widget_Company.ServiceReference1.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                Anderson_Widget_Company.ServiceReference1.CompositeType _result = ((Anderson_Widget_Company.ServiceReference1.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
        }
    }
}
